# Documentation / Usage / Instructions: https://github.com/benammann/git-secrets

# The config syntax
version: 1

# Here you can configure all the contexts you want, default is required
context:

  # The default context, you can specify the context by using -c <context-name>
  default:

    # How to decode the secrets, available: fromName or fromEnv
    # You can only use one
    # You can also overwrite the decodeSecret method in another context
    # So you can use another secret encoding for your production secrets to protect them from the developers for example
    decodeSecret:

      # From name uses the secret stored at ~/.git-secrets.yaml
      fromName: my-secret-name

#      # From env uses the secret stored in the environment variable
#      fromEnv: MY_SECRET

    # Specify your secrets here
    secrets:
      # Define your secrets here
      # Encode them via git-secrets encode <value-to-encode> and them copy them here
      awesomeSecret: ""

  # A custom context
  staging:
    secrets: {}

  # Another custom context
  # Always use -c production if you want to use it
  production:

    # The secrets here are encoded using another secret
    # Encode: git-secrets encode -c production <value>
    decodeSecret:
      fromName: my-staging-secret-name

    secrets:
      # Overwrites "awesomeSecret" from the default context
      awesomeSecret: ""

# The features section is defined here
features:
  # The renderFiles feature takes the defined files and renders them using the go template module
  # Documentation: https://learn.hashicorp.com/tutorials/nomad/go-template-syntax
  # Usage: git-secrets render
  # git-secrets render --debug --dry-run: Debug and Dry run
  # For more details about rendering please head over to the documentation
  # Access Decoded Secrets: {{.Secrets.yourSecretName}}
  # Context Name: {{.ContextName}}
  # File: {{.File.FileIn}} and {{.File.FileOut}}
  renderFiles:
    # File to render for the default context
    default:
      files: []
#    production:
#      files:
#        - fileIn: .env.dist
#          fileOut: .env
