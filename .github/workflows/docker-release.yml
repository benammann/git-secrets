name: Release

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

permissions:
  contents: write

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Fetch all tags
        run: git fetch --force --tags
      - name: Set image name
        run: echo "IMAGE_NAME="benammann/git-secrets"" >> $GITHUB_ENV
      - name: Set docker username
        run: echo "CR_USER=$(docker run -v $PWD/.git-secrets.json:/git-secrets/.git-secrets.json "$IMAGE_NAME:latest" --secret gitsecretspublic=${GIT_SECRETS_PUBLIC_DEFAULT} get config crUser)" >> $GITHUB_ENV
        env:
          GIT_SECRETS_PUBLIC_DEFAULT: ${{ secrets.GIT_SECRETS_PUBLIC_DEFAULT }}
      - name: Set docker token
        run: echo "CR_TOKEN=$(docker run -v $PWD/.git-secrets.json:/git-secrets/.git-secrets.json "$IMAGE_NAME:latest" --secret gitsecretspublic=${GIT_SECRETS_PUBLIC_DEFAULT} get secret crToken)" >> $GITHUB_ENV
        env:
          GIT_SECRETS_PUBLIC_DEFAULT: ${{ secrets.GIT_SECRETS_PUBLIC_DEFAULT }}
      - name: Docker login
        run: echo $CR_TOKEN | docker login -u $CR_USER --password-stdin
      - name: Docker Build
        run: docker build --pull -t "$IMAGE_NAME:latest" .
      - name: Docker Push (latest tag)
        run: docker push "$IMAGE_NAME:latest"
      - name: Remove ref from tag
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Remove v from release version
        run: echo "IMAGE_TAG=${RELEASE_VERSION:1}"
      - name: Docker Tag latest as build tag
        run: docker tag "$IMAGE_NAME:latest" "$IMAGE_NAME:$IMAGE_TAG"
      - name: Docker Push build tag
        run: docker push "$IMAGE_NAME:$IMAGE_TAG"